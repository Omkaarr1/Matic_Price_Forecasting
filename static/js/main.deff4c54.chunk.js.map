{"version":3,"sources":["components/Header.jsx","components/Introduction.jsx","components/Visualization.jsx","components/Models.jsx","components/Results.jsx","components/ImagesGallery.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["Header","React","createElement","className","Introduction","Visualization","trainingData","map","model","index","key","accuracy","trainingLoss","validationLoss","Models","Results","rmse","r2","mae","description","ImagesGallery","src","caption","img","alt","Footer","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.deff4c54.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"bg-blue-600 text-white py-4 shadow-md\">\n    <h1 className=\"text-center text-2xl font-bold\">Cryptocurrency Prediction Dashboard</h1>\n  </header>\n);\n\nexport default Header;","import React from 'react';\n\nconst Introduction = () => (\n  <section className=\"p-8\">\n    <h2 className=\"text-2xl font-bold mb-4\">Introduction</h2>\n    <p>\n      This application provides insights into Polygon (Matic) price forecasting using machine learning models like GNU, GRU, and more. Explore training results, visualizations, and real-time prediction simulations.\n    </p>\n  </section>\n);\n\nexport default Introduction;","\nimport React from \"react\";\nimport trainingData from \"../data/training-data.json\";\n\nconst Visualization = () => {\n  return (\n    <section className=\"p-8\">\n      <h2 className=\"text-2xl font-bold mb-4\">Model Performance</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {trainingData.map((model, index) => (\n          <div key={index} className=\"border rounded p-4 shadow-md\">\n            <h3 className=\"text-lg font-bold\">{model.model}</h3>\n            <p>Accuracy: {model.accuracy}%</p>\n            <p>Training Loss: {model.trainingLoss}</p>\n            <p>Validation Loss: {model.validationLoss}</p>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Visualization;\n","import React from 'react';\n\nconst Models = () => (\n  <section className=\"p-8\">\n    <h2 className=\"text-2xl font-bold mb-4\">Models</h2>\n    <div className=\"grid gap-4 grid-cols-1 md:grid-cols-2\">\n      <div className=\"p-4 shadow-md rounded bg-gray-100\">\n        <h3 className=\"font-bold\">GNU+GRU</h3>\n        <p>\n          Combines Gated Neural Units and Gated Recurrent Units for accurate price predictions in volatile markets.\n        </p>\n      </div>\n      <div className=\"p-4 shadow-md rounded bg-gray-100\">\n        <h3 className=\"font-bold\">Random Forest</h3>\n        <p>\n          Ensemble model capturing complex patterns within historical data for robust predictions.\n        </p>\n      </div>\n    </div>\n  </section>\n);\n\nexport default Models;","import React from 'react';\n\nconst Results = () => {\n  const modelResults = [\n    {\n      model: 'GNU+GRU',\n      rmse: '0.045',\n      r2: '0.98',\n      mae: '0.032',\n      description:\n        'Combines Gated Neural Units and Gated Recurrent Units for robust price predictions in highly volatile markets.',\n    },\n    {\n      model: 'LSTM',\n      rmse: '0.065',\n      r2: '0.93',\n      mae: '0.045',\n      description:\n        'Leverages Long Short-Term Memory to handle sequential data effectively but slightly lags in high volatility.',\n    },\n    {\n      model: 'Random Forest',\n      rmse: '0.087',\n      r2: '0.90',\n      mae: '0.052',\n      description:\n        'Ensemble-based method capturing non-linear relationships but lacks temporal dependency handling.',\n    },\n    {\n      model: 'SVM',\n      rmse: '0.134',\n      r2: '-0.92',\n      mae: '0.095',\n      description:\n        'Support Vector Machine excels in structured data but struggles with high volatility and temporal dependencies.',\n    },\n  ];\n\n  return (\n    <section className=\"p-8\">\n      <h2 className=\"text-2xl font-bold mb-4\">Results</h2>\n      <table className=\"min-w-full bg-white border-collapse border border-gray-200\">\n        <thead>\n          <tr className=\"bg-gray-100\">\n            <th className=\"border px-4 py-2\">Model</th>\n            <th className=\"border px-4 py-2\">RMSE</th>\n            <th className=\"border px-4 py-2\">RÂ² Score</th>\n            <th className=\"border px-4 py-2\">MAE</th>\n            <th className=\"border px-4 py-2\">Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {modelResults.map((model, index) => (\n            <tr\n              key={index}\n              className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}\n            >\n              <td className=\"border px-4 py-2\">{model.model}</td>\n              <td className=\"border px-4 py-2\">{model.rmse}</td>\n              <td className=\"border px-4 py-2\">{model.r2}</td>\n              <td className=\"border px-4 py-2\">{model.mae}</td>\n              <td className=\"border px-4 py-2\">{model.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default Results;","import React from \"react\";\n\nconst ImagesGallery = () => {\n  const images = [\n    { src: \"https://i.ibb.co/ypcwzSJ/image.png\", caption: \"Fig. 1: Architecture Diagram\", description: \"This diagram showcases the overall pipeline for the blockchain-based forecasting system, from data collection to deployment.\" },\n    { src: \"https://i.ibb.co/VMTgS7y/image.png\", caption: \"Fig. 8: Monthly Analysis Visualizations\", description: \"Visualizations of monthly statistics for high, low, open, and close values.\" },\n    { src: \"https://i.ibb.co/7KwKcjr/image.png\", caption: \"Fig. 14: Comparison of Open, High, and Low Prices\", description: \"A comparative chart highlighting relationships between different price points of Matic tokens.\" },\n    { src: \"https://i.ibb.co/NLVTtpS/image.png\", caption: \"Fig. 17: Matic Close Price Chart\", description: \"A time-series plot showing the historical close prices for Matic tokens.\" },\n    { src: \"https://i.ibb.co/b17DjVv/image.png\", caption: \"Fig. 23: Sequential Model Summary\", description: \"Summary of the GRU-based sequential model used for forecasting.\" },\n    { src: \"https://i.ibb.co/KVdStZw/image.png\", caption: \"Fig. 25: Training and Validation Loss\", description: \"Loss curves showing training and validation performance during model training.\" },\n    { src: \"https://i.ibb.co/FWx5kW1/image.png\", caption: \"Fig. 31: Predictions with Random Forest Model\", description: \"A plot comparing original prices with training and testing predictions using Random Forest.\" },\n    { src: \"https://i.ibb.co/PwL7fGJ/image.png\", caption: \"Fig. 32: Predictions with SVM Model\", description: \"A plot comparing original prices with training and testing predictions using SVM.\" },\n    { src: \"https://i.ibb.co/MfPDZyD/image.png\", caption: \"Fig. 33: Predictions with LSTM Model\", description: \"A plot comparing original prices with training and testing predictions using LSTM.\" },\n    { src: \"https://i.ibb.co/dWsHpNT/image.png\", caption: \"Fig. 34: Predictions with GNU+GRU Model\", description: \"A plot comparing original prices with training and testing predictions using GNU+GRU.\" },\n  ];\n\n  return (\n    <section className=\"p-8\">\n      <h2 className=\"text-2xl font-bold mb-4\">Visualizations and Results</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {images.map((img, index) => (\n          <div key={index} className=\"shadow-md rounded bg-gray-100 p-4\">\n            <img src={img.src} alt={img.caption} className=\"w-full h-auto rounded\" />\n            <h3 className=\"text-lg font-bold mt-2\">{img.caption}</h3>\n            <p className=\"text-sm mt-1\">{img.description}</p>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default ImagesGallery;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-gray-800 text-white py-4 text-center\">\r\n      <p>Â© 2024 CryptoSPA. All rights reserved.</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Introduction from './components/Introduction';\nimport Visualization from './components/Visualization';\nimport Models from './components/Models';\nimport Results from './components/Results';\nimport ImagesGallery from './components/ImagesGallery';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  return (\n    <div className=\"font-sans\">\n      <Header />\n      <Introduction />\n      <Visualization />\n      <Models />\n      <Results />\n      <ImagesGallery />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './styles/style.css'; // Ensure you create this CSS file\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}